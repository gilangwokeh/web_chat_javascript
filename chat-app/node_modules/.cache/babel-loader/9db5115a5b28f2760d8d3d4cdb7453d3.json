{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport appApi from '../services/AppApi';\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: null,\n  reducers: {\n    addNotifications: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n    },\n    resetNotifications: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n    }\n  },\n  extraReducers: builder => {\n    //save user after signup\n    builder.addMatcher(appApi.endpoints.signupUser.matchFulfilled, (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      return payload;\n    });\n    //save user after login\n    builder.addMatcher(appApi.endpoints.loginUser.matchFulfilled, (state, _ref4) => {\n      let {\n        payload\n      } = _ref4;\n      return payload;\n    });\n    //logout:  detroy user session\n    builder.addMatcher(appApi.endpoints.logoutUser.matchFulfilled, () => null);\n  }\n});\nexport const {\n  addNotifications,\n  resetNotifications\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","appApi","userSlice","name","initialState","reducers","addNotifications","state","payload","resetNotifications","extraReducers","builder","addMatcher","endpoints","signupUser","matchFulfilled","loginUser","logoutUser","actions","reducer"],"sources":["/home/gilang/web_chat/chat-app/src/features/userSlice.jsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport appApi from '../services/AppApi';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: null,\n  reducers: {\n    addNotifications: (state, { payload }) => { },\n    resetNotifications: (state, { payload }) => { },\n  },\n  extraReducers: (builder) => {\n    //save user after signup\n    builder.addMatcher(appApi.endpoints.signupUser.matchFulfilled, (state, { payload }) => payload);\n    //save user after login\n    builder.addMatcher(appApi.endpoints.loginUser.matchFulfilled, (state, { payload }) => payload);\n    //logout:  detroy user session\n    builder.addMatcher(appApi.endpoints.logoutUser.matchFulfilled, () => null);\n  }\n})\n\nexport const { addNotifications, resetNotifications } = userSlice.actions;\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,oBAAoB;AAEvC,OAAO,MAAMC,SAAS,GAAGF,WAAW,CAAC;EACnCG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE;IACRC,gBAAgB,EAAE,CAACC,KAAK,WAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC;IAAO,CAAC;IAC7CC,kBAAkB,EAAE,CAACF,KAAK,YAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC;IAAO;EAChD,CAAC;EACDE,aAAa,EAAGC,OAAO,IAAK;IAC1B;IACAA,OAAO,CAACC,UAAU,CAACX,MAAM,CAACY,SAAS,CAACC,UAAU,CAACC,cAAc,EAAE,CAACR,KAAK;MAAA,IAAE;QAAEC;MAAQ,CAAC;MAAA,OAAKA,OAAO;IAAA,EAAC;IAC/F;IACAG,OAAO,CAACC,UAAU,CAACX,MAAM,CAACY,SAAS,CAACG,SAAS,CAACD,cAAc,EAAE,CAACR,KAAK;MAAA,IAAE;QAAEC;MAAQ,CAAC;MAAA,OAAKA,OAAO;IAAA,EAAC;IAC9F;IACAG,OAAO,CAACC,UAAU,CAACX,MAAM,CAACY,SAAS,CAACI,UAAU,CAACF,cAAc,EAAE,MAAM,IAAI,CAAC;EAC5E;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAET,gBAAgB;EAAEG;AAAmB,CAAC,GAAGP,SAAS,CAACgB,OAAO;AACzE,eAAehB,SAAS,CAACiB,OAAO"},"metadata":{},"sourceType":"module"}